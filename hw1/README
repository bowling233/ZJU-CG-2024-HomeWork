我阅读了 http://members.chello.at/%7Eeasyfilter/Bresenham.pdf 对 Bresenham 算法的改进。文章中的算法选择直接计算周围三个点的函数值 $e=f(x, y)$，根据误差值大小选择下一个点的位置。对于椭圆等具有规则表达式的图形，代入后可以进一步简化算法，得到和 Bresenham 算法类似的形式。

对于旋转的椭圆，上一篇论文转而采用绘制四条二次贝塞尔曲线的方法，一共需要用到 3 个函数，比较复杂。我转而阅读了 https://cs.brown.edu/research/pubs/theses/masters/1989/dasilva.pdf，该论文计算椭圆的二阶导数，模仿经典的 Bresenham 算法通过累积误差值来绘制椭圆。这种方法更贴近课堂上的讲解，也更容易理解，因此我选择参考这篇论文的方法。

我阅读并理解了文章中的数学算法，并重新实现了相应代码。比如第二篇论文的代码中有两处错误（第二区域的循环条件和第四区域的差值），我进行了调试和修复。